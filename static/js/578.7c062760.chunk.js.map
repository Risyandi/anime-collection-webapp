{"version":3,"file":"static/js/578.7c062760.chunk.js","mappings":"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","sources":["common/FooterLayout.tsx","common/HeaderLayout.tsx","common/MainLayout.tsx","components/CardDetail.tsx","pages/Home/DetailHome.tsx","utils/generalUtils.tsx","utils/localForage.tsx","utils/queryGraphApolloClient.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst FooterContainer = styled.footer`\r\n  background-color: #f8f8fc;\r\n  padding: 20px;\r\n  text-align: center;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst FooterText = styled.p`\r\n  color: #555;\r\n  font-size: 14px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <FooterText>\r\n        Â© 2023 Anime Collections - Risyandi. All rights reserved.\r\n      </FooterText>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  -webkit-box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.06);\r\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  gap: 16px;\r\n`;\r\n\r\nconst MenuItem = styled.li<{ active: boolean }>`\r\n  font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\r\n  cursor: pointer;\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer>\r\n        <Menu>\r\n          <MenuItem active>\r\n            <Link to=\"/anime-collection-webapp\">Homepage</Link>\r\n          </MenuItem>\r\n          <MenuItem active={false}>\r\n            <Link to=\"/collections\">Collections</Link>\r\n          </MenuItem>\r\n        </Menu>\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import HeaderLayout from './HeaderLayout';\r\n\r\nconst MainLayout = () => {\r\n  return (\r\n    <div>\r\n      <HeaderLayout/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","/**\r\n * for handling error, using emotion in reactJS\r\n * error message : You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `cssName` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\r\n */\r\n/** @jsxImportSource @emotion/react */\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport { useParams, useMatch } from \"react-router-dom\";\r\nimport { GET_ANIME_LIST_BY_ID } from \"../utils/queryGraphApolloClient\";\r\nimport { convertHtmlToText } from \"../utils/generalUtils\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { getCollectionById } from \"../utils/localForage\";\r\n\r\n// breakpoint css emotion\r\nconst breakpoints = [768];\r\nconst mq = breakpoints.map((bp) => `@media (max-width: ${bp}px)`);\r\n\r\nconst articleCardStyles = css`\r\n  display: grid;\r\n  grid-template-columns: 285px minmax(300px, 445px);\r\n  max-width: 730px;\r\n  border-radius: 10px;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  ${mq[0]} {\r\n    grid-template-columns: 1fr;\r\n    max-width: 294px;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nconst imageBoxStyles = css`\r\n  border-radius: 10px 0 0 10px;\r\n  overflow: hidden;\r\n\r\n  ${mq[0]} {\r\n    border-radius: 0;\r\n    height: 180px;\r\n  }\r\n`;\r\n\r\nconst articleBannerStyles = css`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  object-position: center;\r\n  transition: all 0.5s ease;\r\n\r\n  ${mq[0]} {\r\n  }\r\n`;\r\n\r\nconst articleContentStyles = css`\r\n  background: white;\r\n  padding: 32px 40px;\r\n  border-radius: 0 10px 10px 0;\r\n\r\n  ${mq[0]} {\r\n    border-radius: 0;\r\n    padding: 30px 28px 20px;\r\n  }\r\n`;\r\n\r\nconst articleTitleStyles = css`\r\n  font-size: 20px;\r\n  color: #ea4c89;\r\n  margin-bottom: 12px;\r\n  line-height: 1.4;\r\n\r\n  ${mq[0]} {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst articleTextStyles = css`\r\n  color: black;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  margin-bottom: 18px;\r\n\r\n  ${mq[0]} {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nconst wrapperCardStyles = css`\r\n  margin: auto;\r\n  margin-top: 20px;\r\n  margin-bottom: 80px;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nconst wrapperDetail = css`\r\n  display: block;\r\n`;\r\n\r\nconst detailTitle = css`\r\n  color: #ea4c89;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst detailText = css`\r\n  font-size: 14px;\r\n`;\r\n\r\ntype DetailHomePageParams = {\r\n  id: any;\r\n};\r\n\r\nconst CardDetail = () => {\r\n  const { id } = useParams<DetailHomePageParams>();\r\n  const matches = useMatch(\"/detail/collections/:id\");\r\n\r\n  const [dataCardsDetail, setDataCardsDetail] = useState<{\r\n    [key: string]: any;\r\n  }>([]);\r\n\r\n  const { data } = useQuery(GET_ANIME_LIST_BY_ID, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (matches !== null) {\r\n      // set data for detail collections from localstorage\r\n      getCollectionById(id).then((data) => {\r\n        setDataCardsDetail(data);\r\n      });\r\n    } else {\r\n      if (data !== undefined) {\r\n        // set data for detail homepage from graphql\r\n        setDataCardsDetail([data.Media]);\r\n      }\r\n    }\r\n  }, [data, id, matches]);\r\n\r\n  return (\r\n    <div css={wrapperCardStyles}>\r\n      {dataCardsDetail.map((card: any, index: any) => (\r\n        <article key={index} css={articleCardStyles}>\r\n          <div css={imageBoxStyles}>\r\n            <img\r\n              src={card.coverImage.large}\r\n              alt={card.title ? card.title.romaji : '-'}\r\n              css={articleBannerStyles}\r\n            />\r\n          </div>\r\n          <div css={articleContentStyles}>\r\n            <h3 css={articleTitleStyles}>{card.title ? card.title.romaji : '-'}</h3>\r\n            <p css={articleTextStyles}>{card.description ? convertHtmlToText(card.description): '-'}</p>\r\n            <div css={wrapperDetail}>\r\n              <div css={detailTitle}>Genres</div>\r\n              <div css={detailText}>{card.genres ? card.genres.join(\", \").toLowerCase(): '-'}</div>\r\n            </div>\r\n            <br />\r\n            <div css={wrapperDetail}>\r\n              <div css={detailTitle}>Score</div>\r\n              <div css={detailText}>{card.averageScore ? card.averageScore : '-'}</div>\r\n            </div>\r\n            <br />\r\n            <div css={wrapperDetail}>\r\n              <div css={detailTitle}>Duration</div>\r\n              <div css={detailText}>{card.duration ? card.duration+' minutes' : '-'} </div>\r\n            </div>\r\n            <br />\r\n            <div css={wrapperDetail}>\r\n              <div css={detailTitle}>Type</div>\r\n              <div css={detailText}>{card.type ? card.type.toLowerCase() : '-'}</div>\r\n            </div>\r\n          </div>\r\n        </article>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDetail;\r\n","import MainLayout from \"../../common/MainLayout\";\r\nimport FooterLayout from \"../../common/FooterLayout\";\r\nimport CardDetail from \"../../components/CardDetail\";\r\n\r\nconst DetailHomePage = () => {\r\n  return (\r\n    <div>\r\n      <MainLayout />\r\n      <CardDetail />\r\n      <FooterLayout />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailHomePage;\r\n","const convertHtmlToText = (html: any) => {\r\n  const element = document.createElement(\"div\");\r\n  element.innerHTML = html;\r\n  return element.textContent || element.innerText || \"\";\r\n};\r\n\r\nconst truncateText = (text: string, maxLength: number) => {\r\n  if (text !== undefined && text !== \"\") {\r\n    if (text.length > maxLength) {\r\n      text = text.substring(0, maxLength - 1) + \"â¦\";\r\n    }\r\n  } else {\r\n    text = \"-\";\r\n  }\r\n  return text;\r\n};\r\n\r\nexport { convertHtmlToText, truncateText };\r\n","/**\r\n * this default storage using (IndexedDB)\r\n * localForage selects backend drivers for the datastore in this order:\r\n * 1. IndexedDB\r\n * 2. WebSQL\r\n * 3. localStorage\r\n */\r\n\r\nimport localforage from \"localforage\";\r\n\r\nexport async function getCollections() {\r\n  await fakeNetwork(\"\");\r\n\r\n  let collections = await localforage.getItem(\"collection\");\r\n  return collections;\r\n}\r\n\r\nexport async function getCollectionDuplicate(id: number) {\r\n  await fakeNetwork(`collection:${id}`);\r\n\r\n  let collections: any = await getCollections();\r\n  let collection = collections.find((collection: any) => collection.id === id);\r\n  return collection ?? null;\r\n}\r\n\r\nexport async function getCollectionById(id: any) {\r\n  await fakeNetwork(`collection:${id}`);\r\n\r\n  let collections: any = await getCollections();\r\n  let collection = collections.filter((collection: any) => collection.id === Number(id));\r\n  return collection;\r\n}\r\n\r\nexport async function createCollection(dataCards: any) {\r\n  await fakeNetwork(\"\");\r\n\r\n  let collection = dataCards;\r\n  let collections: any = await getCollections();\r\n\r\n  if (collections !== null) {\r\n    // check duplicate data in the storage. if have same id found in the storage cannot push again to storage.\r\n    let collectionDuplicate: any = await getCollectionDuplicate(dataCards.id);\r\n    if (collectionDuplicate === null) {\r\n      collections.push(collection);\r\n      await set(collections);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    await set([collection]);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function deleteCollections(id: number) {\r\n  let collections: any = await getCollections();\r\n  let index = collections.findIndex((collection: any) => collection.id === id);\r\n  if (index > -1) {\r\n    collections.splice(index, 1);\r\n    await set(collections);\r\n  }\r\n}\r\n\r\nfunction set(collection: any) {\r\n  return localforage.setItem(\"collection\", collection);\r\n}\r\n\r\n// fake a cache so we dont slow down stuff weve already seen\r\nlet fakeCache: any = {};\r\nasync function fakeNetwork(key: any) {\r\n  if (!key) {\r\n    fakeCache = {};\r\n  }\r\n\r\n  if (fakeCache[key]) {\r\n    return;\r\n  }\r\n\r\n  fakeCache[key] = true;\r\n  return new Promise((res) => {\r\n    setTimeout(res, Math.random() * 800);\r\n  });\r\n}\r\n","/**\r\n * list of query of graphql using apollo client\r\n */\r\n\r\nimport { gql } from \"@apollo/client\";\r\n\r\nconst GET_ANIME_LIST = gql`\r\n  query Data($id: Int, $page: Int, $perPage: Int, $search: String) {\r\n    Page(page: $page, perPage: $perPage) {\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n      media(id: $id, search: $search) {\r\n        id\r\n        type\r\n        hashtag\r\n        averageScore\r\n        popularity\r\n        meanScore\r\n        duration\r\n        genres\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        description\r\n        startDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        endDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        bannerImage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ANIME_LIST_BY_TYPE = gql`\r\n  query Data($page: Int, $perPage: Int) {\r\n    Page(page: $page, perPage: $perPage) {\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n      media(type: ANIME, isAdult: false, sort:TRENDING_DESC) {\r\n        id\r\n        type\r\n        hashtag\r\n        averageScore\r\n        popularity\r\n        meanScore\r\n        duration\r\n        genres\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        description\r\n        startDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        endDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        bannerImage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ANIME_LIST_BY_ID = gql`\r\n  query ($id: Int) {\r\n    Media(id: $id) {\r\n      id\r\n      type\r\n      hashtag\r\n      averageScore\r\n      popularity\r\n      meanScore\r\n      duration\r\n      genres\r\n      title {\r\n        english\r\n        romaji\r\n      }\r\n      description\r\n      startDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      endDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      coverImage {\r\n        large\r\n      }\r\n      bannerImage\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ANIME_LIST, GET_ANIME_LIST_BY_TYPE, GET_ANIME_LIST_BY_ID };\r\n"],"names":["FooterContainer","styled","footer","_templateObject","_taggedTemplateLiteral","FooterText","p","_templateObject2","_jsx","children","HeaderContainer","div","Menu","ul","MenuItem","li","_templateObject3","props","active","_Fragment","_jsxs","Link","to","HeaderLayout","mq","map","bp","concat","articleCardStyles","css","imageBoxStyles","articleBannerStyles","articleContentStyles","_templateObject4","articleTitleStyles","_templateObject5","articleTextStyles","_templateObject6","wrapperCardStyles","_templateObject7","wrapperDetail","_templateObject8","detailTitle","_templateObject9","detailText","_templateObject10","id","useParams","matches","useMatch","_useState","useState","_useState2","_slicedToArray","dataCardsDetail","setDataCardsDetail","data","useQuery","GET_ANIME_LIST_BY_ID","variables","useEffect","getCollectionById","then","undefined","Media","card","index","src","coverImage","large","alt","title","romaji","description","convertHtmlToText","genres","join","toLowerCase","averageScore","duration","type","MainLayout","CardDetail","FooterLayout","html","element","document","createElement","innerHTML","textContent","innerText","truncateText","text","maxLength","length","substring","getCollections","_getCollections","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","collections","wrap","_context","prev","next","fakeNetwork","localforage","sent","abrupt","stop","getCollectionDuplicate","_x","_getCollectionDuplicate","_callee2","collection","_context2","find","_x2","_getCollectionById","_callee3","_context3","filter","Number","createCollection","_x3","_createCollection","_callee4","dataCards","_context4","push","set","deleteCollections","_x4","_deleteCollections","_callee5","_context5","findIndex","splice","fakeCache","_x5","_fakeNetwork","_callee6","key","_context6","Promise","res","setTimeout","Math","random","GET_ANIME_LIST_BY_TYPE","gql"],"sourceRoot":""}