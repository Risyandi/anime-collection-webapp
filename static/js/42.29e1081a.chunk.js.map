{"version":3,"file":"static/js/42.29e1081a.chunk.js","mappings":"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","sources":["common/FooterLayout.tsx","common/HeaderLayout.tsx","common/MainLayout.tsx","components/CardList.tsx","pages/Home/index.tsx","utils/generalUtils.tsx","utils/localForage.tsx","utils/queryGraphApolloClient.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nconst FooterContainer = styled.footer`\r\n  background-color: #f8f8fc;\r\n  padding: 20px;\r\n  text-align: center;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst FooterText = styled.p`\r\n  color: #555;\r\n  font-size: 14px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <FooterText>\r\n        Â© 2023 Anime Collections - Risyandi. All rights reserved.\r\n      </FooterText>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  -webkit-box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.06);\r\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nconst Menu = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  gap: 16px;\r\n`;\r\n\r\nconst MenuItem = styled.li<{ active: boolean }>`\r\n  font-weight: ${(props) => (props.active ? \"bold\" : \"normal\")};\r\n  cursor: pointer;\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst HeaderMenu = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer>\r\n        <Menu>\r\n          <MenuItem active>\r\n            <Link to=\"/anime-collection-webapp\">Homepage</Link>\r\n          </MenuItem>\r\n          <MenuItem active={false}>\r\n            <Link to=\"/collections\">Collections</Link>\r\n          </MenuItem>\r\n        </Menu>\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderMenu;\r\n","import HeaderLayout from './HeaderLayout';\r\n\r\nconst MainLayout = () => {\r\n  return (\r\n    <div>\r\n      <HeaderLayout/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GET_ANIME_LIST_BY_TYPE } from \"../utils/queryGraphApolloClient\";\r\nimport { convertHtmlToText, truncateText } from \"../utils/generalUtils\";\r\nimport { createCollection } from \"../utils/localForage\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst TitleDiv = styled.div`\r\n  margin: 10px 22px;\r\n  color: #ea4c89;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  margin: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n`;\r\n\r\nconst CardTitle = styled.h2`\r\n  font-size: 18px;\r\n  margin: 0 8px 8px;\r\n  color: #ea4c89;\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  object-position: center;\r\n  transition: all 0.5s ease;\r\n  margin-bottom: 8px;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n`;\r\n\r\nconst CardDescription = styled.p`\r\n  margin: 0 8px 8px;\r\n  padding-bottom: 40px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  background-color: #ea4c89;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n  border-style: none;\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  height: 40px;\r\n  line-height: 20px;\r\n  list-style: none;\r\n  outline: none;\r\n  padding: 10px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  transition: color 100ms;\r\n  vertical-align: baseline;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  width: 100%;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #f082ac;\r\n  }\r\n`;\r\n\r\nconst PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 16px;\r\n  margin-bottom: 100px;\r\n`;\r\n\r\nconst PaginationButton = styled.button<{ disabled: boolean }>`\r\n  background-color: ${(props) => (props.disabled ? \"#ccc\" : \"#ea4c89\")};\r\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n  margin: 0 4px;\r\n  border-radius: 8px;\r\n  border-style: none;\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  height: 40px;\r\n  line-height: 20px;\r\n  list-style: none;\r\n  outline: none;\r\n  padding: 10px 16px;\r\n  position: relative;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  transition: color 100ms;\r\n  vertical-align: baseline;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #f082ac;\r\n  }\r\n`;\r\n\r\nconst CardList = () => {\r\n  const [dataCards, setDataCards] = useState<{ [key: string]: any }>([]);\r\n  const [nextPage, setNextPage] = useState<boolean>(true);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n  const { data, refetch } = useQuery(GET_ANIME_LIST_BY_TYPE, {\r\n    variables: {\r\n      page: 1,\r\n      perPage: 10,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data !== undefined) {\r\n      setDataCards(data.Page.media);\r\n      let { hasNextPage } = data.Page.pageInfo;\r\n      if (hasNextPage) {\r\n        setNextPage(false);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n    handleLoadNextPage(currentPage + 1);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    setCurrentPage((prevPage) => prevPage - 1);\r\n    handleLoadNextPage(currentPage - 1);\r\n  };\r\n\r\n  const handleLoadNextPage = (pageNumber: number) => {\r\n    refetch({\r\n      page: pageNumber,\r\n    });\r\n  };\r\n\r\n  const addCollection = (data: any) => {\r\n    createCollection(data).then((res) => {\r\n      if (res) {\r\n        alert(\"Data exist in your collections\");\r\n      } else {\r\n        alert(\"Data has been added in your collections\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TitleDiv>\r\n        <h1>Anime</h1>\r\n      </TitleDiv>\r\n      <CardContainer>\r\n        {dataCards.map((card: any, index: any) => (\r\n          <Card key={index}>\r\n            <Link to={`/detail/${card.id}`}>\r\n              <CardImage src={card.coverImage.large} alt={card.title} />\r\n              <CardTitle>{card.title.romaji}</CardTitle>\r\n            </Link>\r\n            <CardDescription>\r\n              {truncateText(convertHtmlToText(card.description), 250)}\r\n            </CardDescription>\r\n            <Div>\r\n              <Button onClick={() => addCollection(card)}>\r\n                Add Collection\r\n              </Button>\r\n            </Div>\r\n          </Card>\r\n        ))}\r\n      </CardContainer>\r\n      <PaginationContainer>\r\n        <PaginationButton\r\n          disabled={currentPage === 1}\r\n          onClick={handlePreviousPage}\r\n        >\r\n          Previous\r\n        </PaginationButton>\r\n        <PaginationButton disabled={nextPage} onClick={handleNextPage}>\r\n          Next\r\n        </PaginationButton>\r\n      </PaginationContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import MainLayout from \"../../common/MainLayout\";\r\nimport FooterLayout from \"../../common/FooterLayout\";\r\nimport CardList from \"../../components/CardList\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <MainLayout />\r\n      <CardList />\r\n      <FooterLayout />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","const convertHtmlToText = (html: any) => {\r\n  const element = document.createElement(\"div\");\r\n  element.innerHTML = html;\r\n  return element.textContent || element.innerText || \"\";\r\n};\r\n\r\nconst truncateText = (text: string, maxLength: number) => {\r\n  if (text !== undefined && text !== \"\") {\r\n    if (text.length > maxLength) {\r\n      text = text.substring(0, maxLength - 1) + \"â¦\";\r\n    }\r\n  } else {\r\n    text = \"-\";\r\n  }\r\n  return text;\r\n};\r\n\r\nexport { convertHtmlToText, truncateText };\r\n","/**\r\n * this default storage using (IndexedDB)\r\n * localForage selects backend drivers for the datastore in this order:\r\n * 1. IndexedDB\r\n * 2. WebSQL\r\n * 3. localStorage\r\n */\r\n\r\nimport localforage from \"localforage\";\r\n\r\nexport async function getCollections() {\r\n  await fakeNetwork(\"\");\r\n\r\n  let collections = await localforage.getItem(\"collection\");\r\n  return collections;\r\n}\r\n\r\nexport async function getCollectionDuplicate(id: number) {\r\n  await fakeNetwork(`collection:${id}`);\r\n\r\n  let collections: any = await getCollections();\r\n  let collection = collections.find((collection: any) => collection.id === id);\r\n  return collection ?? null;\r\n}\r\n\r\nexport async function getCollectionById(id: any) {\r\n  await fakeNetwork(`collection:${id}`);\r\n\r\n  let collections: any = await getCollections();\r\n  let collection = collections.filter((collection: any) => collection.id === Number(id));\r\n  return collection;\r\n}\r\n\r\nexport async function createCollection(dataCards: any) {\r\n  await fakeNetwork(\"\");\r\n\r\n  let collection = dataCards;\r\n  let collections: any = await getCollections();\r\n\r\n  if (collections !== null) {\r\n    // check duplicate data in the storage. if have same id found in the storage cannot push again to storage.\r\n    let collectionDuplicate: any = await getCollectionDuplicate(dataCards.id);\r\n    if (collectionDuplicate === null) {\r\n      collections.push(collection);\r\n      await set(collections);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    await set([collection]);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function deleteCollections(id: number) {\r\n  let collections: any = await getCollections();\r\n  let index = collections.findIndex((collection: any) => collection.id === id);\r\n  if (index > -1) {\r\n    collections.splice(index, 1);\r\n    await set(collections);\r\n  }\r\n}\r\n\r\nfunction set(collection: any) {\r\n  return localforage.setItem(\"collection\", collection);\r\n}\r\n\r\n// fake a cache so we dont slow down stuff weve already seen\r\nlet fakeCache: any = {};\r\nasync function fakeNetwork(key: any) {\r\n  if (!key) {\r\n    fakeCache = {};\r\n  }\r\n\r\n  if (fakeCache[key]) {\r\n    return;\r\n  }\r\n\r\n  fakeCache[key] = true;\r\n  return new Promise((res) => {\r\n    setTimeout(res, Math.random() * 800);\r\n  });\r\n}\r\n","/**\r\n * list of query of graphql using apollo client\r\n */\r\n\r\nimport { gql } from \"@apollo/client\";\r\n\r\nconst GET_ANIME_LIST = gql`\r\n  query Data($id: Int, $page: Int, $perPage: Int, $search: String) {\r\n    Page(page: $page, perPage: $perPage) {\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n      media(id: $id, search: $search) {\r\n        id\r\n        type\r\n        hashtag\r\n        averageScore\r\n        popularity\r\n        meanScore\r\n        duration\r\n        genres\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        description\r\n        startDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        endDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        bannerImage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ANIME_LIST_BY_TYPE = gql`\r\n  query Data($page: Int, $perPage: Int) {\r\n    Page(page: $page, perPage: $perPage) {\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n      media(type: ANIME, isAdult: false, sort:TRENDING_DESC) {\r\n        id\r\n        type\r\n        hashtag\r\n        averageScore\r\n        popularity\r\n        meanScore\r\n        duration\r\n        genres\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        description\r\n        startDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        endDate {\r\n          year\r\n          month\r\n          day\r\n        }\r\n        coverImage {\r\n          large\r\n        }\r\n        bannerImage\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_ANIME_LIST_BY_ID = gql`\r\n  query ($id: Int) {\r\n    Media(id: $id) {\r\n      id\r\n      type\r\n      hashtag\r\n      averageScore\r\n      popularity\r\n      meanScore\r\n      duration\r\n      genres\r\n      title {\r\n        english\r\n        romaji\r\n      }\r\n      description\r\n      startDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      endDate {\r\n        year\r\n        month\r\n        day\r\n      }\r\n      coverImage {\r\n        large\r\n      }\r\n      bannerImage\r\n    }\r\n  }\r\n`;\r\n\r\nexport { GET_ANIME_LIST, GET_ANIME_LIST_BY_TYPE, GET_ANIME_LIST_BY_ID };\r\n"],"names":["FooterContainer","styled","footer","_templateObject","_taggedTemplateLiteral","FooterText","p","_templateObject2","_jsx","children","HeaderContainer","div","Menu","ul","MenuItem","li","_templateObject3","props","active","_Fragment","_jsxs","Link","to","HeaderLayout","CardContainer","Div","TitleDiv","Card","_templateObject4","CardTitle","h2","_templateObject5","CardImage","img","_templateObject6","CardDescription","_templateObject7","Button","_templateObject8","PaginationContainer","_templateObject9","PaginationButton","button","_templateObject10","disabled","_useState","useState","_useState2","_slicedToArray","dataCards","setDataCards","_useState3","_useState4","nextPage","setNextPage","_useState5","_useState6","currentPage","setCurrentPage","_useQuery","useQuery","GET_ANIME_LIST_BY_TYPE","variables","page","perPage","data","refetch","useEffect","undefined","Page","media","pageInfo","hasNextPage","handleLoadNextPage","pageNumber","map","card","index","concat","id","src","coverImage","large","alt","title","romaji","truncateText","convertHtmlToText","description","onClick","createCollection","then","res","alert","addCollection","prevPage","MainLayout","CardList","FooterLayout","html","element","document","createElement","innerHTML","textContent","innerText","text","maxLength","length","substring","getCollections","_getCollections","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","collections","wrap","_context","prev","next","fakeNetwork","localforage","sent","abrupt","stop","getCollectionDuplicate","_x","_getCollectionDuplicate","_callee2","collection","_context2","find","getCollectionById","_x2","_getCollectionById","_callee3","_context3","filter","Number","_x3","_createCollection","_callee4","_context4","push","set","deleteCollections","_x4","_deleteCollections","_callee5","_context5","findIndex","splice","fakeCache","_x5","_fakeNetwork","_callee6","key","_context6","Promise","setTimeout","Math","random","gql","GET_ANIME_LIST_BY_ID"],"sourceRoot":""}